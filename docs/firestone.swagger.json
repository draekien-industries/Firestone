{
  "x-generator": "NSwag v13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Firestone.Api",
    "description": "API for managing FIRE progression data.",
    "version": "v1"
  },
  "paths": {
    "/assetholders/{id}": {
      "get": {
        "tags": [
          "AssetHolders"
        ],
        "summary": "Get an asset holder by id.",
        "operationId": "AssetHolders_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the asset holder.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "The correlation id to be associated with the request. One will be generated by the API if not provided.",
            "schema": {
              "type": "string",
              "format": "guid",
              "example": "72b264f5-d6e9-4e74-a6ce-d398e2c8421a"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnknownProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "The AssetHolderDto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetHolderDto"
                }
              }
            }
          }
        }
      }
    },
    "/assetholders": {
      "post": {
        "tags": [
          "AssetHolders"
        ],
        "summary": "Add an asset holder",
        "operationId": "AssetHolders_Add",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "The correlation id to be associated with the request. One will be generated by the API if not provided.",
            "schema": {
              "type": "string",
              "format": "guid",
              "example": "72b264f5-d6e9-4e74-a6ce-d398e2c8421a"
            }
          }
        ],
        "requestBody": {
          "x-name": "request",
          "description": "The AddAssetHolderCommand",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAssetHolderCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnknownProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "The created AssetHolderDto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetHolderDto"
                }
              }
            }
          }
        }
      }
    },
    "/assets/{id}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Get an assets entry by its ID",
        "operationId": "Assets_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the assets entry",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "The correlation id to be associated with the request. One will be generated by the API if not provided.",
            "schema": {
              "type": "string",
              "format": "guid",
              "example": "72b264f5-d6e9-4e74-a6ce-d398e2c8421a"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnknownProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "The AssetsDto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetsDto"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Assets"
        ],
        "summary": "Update an assets entry with new values",
        "operationId": "Assets_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the assets entry",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "The correlation id to be associated with the request. One will be generated by the API if not provided.",
            "schema": {
              "type": "string",
              "format": "guid",
              "example": "72b264f5-d6e9-4e74-a6ce-d398e2c8421a"
            }
          }
        ],
        "requestBody": {
          "x-name": "data",
          "description": "The data for updating the assets entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssetsDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnknownProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "The updated AssetsDto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetsDto"
                }
              }
            }
          }
        }
      }
    },
    "/firegraphs/{id}": {
      "get": {
        "tags": [
          "FireGraphs"
        ],
        "operationId": "FireGraphs_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "The correlation id to be associated with the request. One will be generated by the API if not provided.",
            "schema": {
              "type": "string",
              "format": "guid",
              "example": "72b264f5-d6e9-4e74-a6ce-d398e2c8421a"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnknownProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FireGraphDto"
                }
              }
            }
          }
        }
      }
    },
    "/firetables": {
      "get": {
        "tags": [
          "FireTables"
        ],
        "summary": "List a page of FIRE tables",
        "operationId": "FireTables_List",
        "parameters": [
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "Cursor",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "The correlation id to be associated with the request. One will be generated by the API if not provided.",
            "schema": {
              "type": "string",
              "format": "guid",
              "example": "72b264f5-d6e9-4e74-a6ce-d398e2c8421a"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnknownProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "The PaginatedResponse`1 of FireTableSummaryDto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponseOfFireTableSummaryDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "FireTables"
        ],
        "summary": "Add a new FIRE table",
        "operationId": "FireTables_Add",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "The correlation id to be associated with the request. One will be generated by the API if not provided.",
            "schema": {
              "type": "string",
              "format": "guid",
              "example": "72b264f5-d6e9-4e74-a6ce-d398e2c8421a"
            }
          }
        ],
        "requestBody": {
          "x-name": "request",
          "description": "The AddFireTableCommand",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddFireTableCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnknownProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "The created FireTableDto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FireTableDto"
                }
              }
            }
          }
        }
      }
    },
    "/firetables/{id}": {
      "get": {
        "tags": [
          "FireTables"
        ],
        "summary": "Get a FIRE table by ID",
        "operationId": "FireTables_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the FireTableDto",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "The correlation id to be associated with the request. One will be generated by the API if not provided.",
            "schema": {
              "type": "string",
              "format": "guid",
              "example": "72b264f5-d6e9-4e74-a6ce-d398e2c8421a"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnknownProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "The FireTableDto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FireTableDto"
                }
              }
            }
          }
        }
      }
    },
    "/lineitems/{id}": {
      "get": {
        "tags": [
          "LineItems"
        ],
        "summary": "Get a line item by ID.",
        "operationId": "LineItems_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the LineItemDto",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "The correlation id to be associated with the request. One will be generated by the API if not provided.",
            "schema": {
              "type": "string",
              "format": "guid",
              "example": "72b264f5-d6e9-4e74-a6ce-d398e2c8421a"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnknownProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "The LineItemDto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemDto"
                }
              }
            }
          }
        }
      }
    },
    "/lineitems": {
      "post": {
        "tags": [
          "LineItems"
        ],
        "summary": "Add a new line item to a FIRE table",
        "operationId": "LineItems_Add",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "The correlation id to be associated with the request. One will be generated by the API if not provided.",
            "schema": {
              "type": "string",
              "format": "guid",
              "example": "72b264f5-d6e9-4e74-a6ce-d398e2c8421a"
            }
          }
        ],
        "requestBody": {
          "x-name": "request",
          "description": "The AddLineItemCommand",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddLineItemCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnknownProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "The created LineItemDto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemDto"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "NotFoundProblemDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StatusCodeProblemDetails"
          },
          {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            }
          }
        ]
      },
      "StatusCodeProblemDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProblemDetails"
          },
          {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            }
          }
        ]
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "additionalProperties": {}
          }
        }
      },
      "UnknownProblemDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StatusCodeProblemDetails"
          },
          {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            }
          }
        ]
      },
      "AssetHolderDto": {
        "type": "object",
        "description": "Data transfer object for an asset holder.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the asset holder.",
            "format": "guid"
          },
          "fireTableId": {
            "type": "string",
            "description": "The ID of the FIRE table that this asset holder is associated with.",
            "format": "guid"
          },
          "name": {
            "type": "string",
            "description": "The name of the asset holder."
          },
          "expectedMonthlyIncome": {
            "type": "number",
            "description": "The expected monthly income of the asset holder.",
            "format": "double"
          },
          "plannedMonthlyContribution": {
            "type": "number",
            "description": "The planned monthly contribution (towards growing assets) for the asset holder.",
            "format": "double"
          },
          "assets": {
            "type": "array",
            "description": "The historical records of the asset holder's total asset values.",
            "items": {
              "$ref": "#/components/schemas/AssetsDto"
            }
          }
        }
      },
      "AssetsDto": {
        "type": "object",
        "description": "Data transfer object for an asset holder's assets.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the assets.",
            "format": "guid"
          },
          "assetHolderId": {
            "type": "string",
            "description": "The ID of the asset holder.",
            "format": "guid"
          },
          "lineItemId": {
            "type": "string",
            "description": "The ID of the line item the assets where recorded against.",
            "format": "guid"
          },
          "amount": {
            "type": "number",
            "description": "The assets total amount.",
            "format": "double"
          }
        }
      },
      "AddAssetHolderCommand": {
        "type": "object",
        "description": "A command that creates a new asset holder.",
        "additionalProperties": false,
        "required": [
          "fireTableId",
          "name"
        ],
        "properties": {
          "fireTableId": {
            "type": "string",
            "description": "The ID of the FireTable to add the asset holder to.",
            "format": "guid",
            "nullable": false
          },
          "name": {
            "type": "string",
            "description": "The name of the asset holder.",
            "minLength": 1,
            "nullable": false
          },
          "expectedMonthlyIncome": {
            "type": "number",
            "description": "The expected monthly income amount.",
            "format": "double",
            "minimum": 0.0
          },
          "plannedMonthlyContribution": {
            "type": "number",
            "description": "The planned monthly contribution amount.",
            "format": "double",
            "minimum": 0.0
          }
        }
      },
      "UpdateAssetsDto": {
        "type": "object",
        "description": "Data transfer object for updating assets.",
        "additionalProperties": false,
        "properties": {
          "amount": {
            "type": "number",
            "description": "The new total assets amount.",
            "format": "double",
            "minimum": 0.0
          }
        }
      },
      "FireGraphDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "coastTargetStartingBalance": {
            "type": "number",
            "format": "double"
          },
          "minimumMonthlyContribution": {
            "type": "number",
            "format": "double"
          },
          "recordedAssets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointDto"
            }
          },
          "projectedAssets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointDto"
            }
          },
          "adjustedTargets": {
            "$ref": "#/components/schemas/AdjustedTargetsDto"
          }
        }
      },
      "DataPointDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "AdjustedTargetsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "retirementTargets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointDto"
            }
          },
          "coastTargets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointDto"
            }
          },
          "minimumGrowthTargets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointDto"
            }
          }
        }
      },
      "PaginatedResponseOfFireTableSummaryDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FireTableSummaryDto"
            }
          }
        }
      },
      "Links": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "self": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "next": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previous": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        }
      },
      "FireTableSummaryDto": {
        "type": "object",
        "description": "A summary of a FIRE Table",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the FIRE table.",
            "format": "guid"
          },
          "assetHolders": {
            "type": "array",
            "description": "The asset holders associated with the FIRE table.",
            "items": {
              "$ref": "#/components/schemas/AssetHolderSummaryDto"
            }
          }
        }
      },
      "AssetHolderSummaryDto": {
        "type": "object",
        "description": "Data transfer object for an asset holder summary details.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the asset holder.",
            "format": "guid"
          },
          "name": {
            "type": "string",
            "description": "The name of the asset holder."
          }
        }
      },
      "FireTableDto": {
        "type": "object",
        "description": "Data transfer object for a FIRE table",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the FIRE table",
            "format": "guid"
          },
          "yearlyInflationRate": {
            "type": "number",
            "description": "The yearly inflation rate. Used to calculate various projections",
            "format": "double",
            "example": 0.025
          },
          "monthlyInflationRate": {
            "type": "number",
            "description": "The monthly inflation rate. Used to calculate various projections.",
            "format": "double"
          },
          "yearlyNominalReturnRate": {
            "type": "number",
            "description": "The yearly nominal return rate. Used to calculate various projections.",
            "format": "double",
            "example": 0.07
          },
          "monthlyNominalReturnRate": {
            "type": "number",
            "description": "The monthly nominal return rate.",
            "format": "double"
          },
          "retirementTargetBeforeInflation": {
            "type": "number",
            "description": "The assets value that you want to achieve when you reach retirement.",
            "format": "double"
          },
          "yearsToRetirement": {
            "type": "integer",
            "description": "The number of years until you want to retire.",
            "format": "int32"
          },
          "monthsToRetirement": {
            "type": "integer",
            "description": "The number of months until retirement.",
            "format": "int32"
          },
          "lineItems": {
            "type": "array",
            "description": "The table's line items.",
            "items": {
              "$ref": "#/components/schemas/LineItemDto"
            }
          },
          "assetHolders": {
            "type": "array",
            "description": "The table's asset holders",
            "items": {
              "$ref": "#/components/schemas/AssetHolderDto"
            }
          }
        }
      },
      "LineItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "fireTableId": {
            "type": "string",
            "format": "guid"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetsDto"
            }
          },
          "assetsTotal": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "AddFireTableCommand": {
        "type": "object",
        "description": "A command to create a new FIRE table.",
        "additionalProperties": false,
        "properties": {
          "yearlyInflationRate": {
            "type": "number",
            "description": "The expected yearly inflation rate.",
            "format": "double",
            "minimum": 0.0,
            "exclusiveMinimum": true
          },
          "yearlyNominalReturnRate": {
            "type": "number",
            "description": "The expected yearly nominal return rate.",
            "format": "double",
            "minimum": 0.0,
            "exclusiveMinimum": true
          },
          "retirementTarget": {
            "type": "number",
            "description": "The target asset value at retirement.",
            "format": "double",
            "minimum": 0.0,
            "exclusiveMinimum": true
          },
          "yearsUntilRetirement": {
            "type": "integer",
            "description": "The number of years to reach the target asset value.",
            "format": "int32",
            "minimum": 0.0,
            "exclusiveMinimum": true
          }
        }
      },
      "AddLineItemCommand": {
        "type": "object",
        "description": "A command for adding a new line item to a FIRE table.",
        "additionalProperties": false,
        "required": [
          "fireTableId",
          "date",
          "assets"
        ],
        "properties": {
          "fireTableId": {
            "type": "string",
            "description": "The ID of the FIRE table to add the line item to.",
            "format": "guid",
            "nullable": false
          },
          "date": {
            "type": "string",
            "description": "The date the line item refers to.",
            "format": "date-time",
            "minLength": 1,
            "nullable": false
          },
          "assets": {
            "type": "object",
            "description": "A key value pair of the AssetHolderId and the AssetAmount.",
            "minLength": 1,
            "nullable": false,
            "additionalProperties": {
              "type": "number",
              "format": "double"
            }
          }
        }
      }
    }
  }
}