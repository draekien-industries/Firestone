// <auto-generated />
using System;
using Firestone.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Firestone.Infrastructure.Data.Migrations
{
    [DbContext(typeof(FirestoneDbContext))]
    [Migration("20220730004943_FirestoneDb")]
    partial class FirestoneDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Firestone.Domain.Data.AssetHolder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TableId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.ToTable("AssetHolders");
                });

            modelBuilder.Entity("Firestone.Domain.Data.FireProgressionTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("FireProgressionTables");
                });

            modelBuilder.Entity("Firestone.Domain.Data.FireProgressionTableEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("CoastTargetValue")
                        .HasColumnType("float");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<double?>("MinimumGrowthTargetValue")
                        .HasColumnType("float");

                    b.Property<Guid?>("PreviousTableEntryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("RetirementTargetValue")
                        .HasColumnType("float");

                    b.Property<Guid>("TableId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PreviousTableEntryId");

                    b.HasIndex("TableId");

                    b.ToTable("FireProgressionTableEntries");
                });

            modelBuilder.Entity("Firestone.Domain.Data.IndividualAssetsTotal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssetHolderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TableEntryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AssetHolderId");

                    b.HasIndex("TableEntryId");

                    b.ToTable("IndividualAssetsTotals");
                });

            modelBuilder.Entity("Firestone.Domain.Data.InflationRateConfiguration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("YearlyRate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.ToTable("InflationRates");
                });

            modelBuilder.Entity("Firestone.Domain.Data.NominalReturnRateConfiguration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("YearlyReturnRate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.ToTable("NominalReturnRates");
                });

            modelBuilder.Entity("Firestone.Domain.Data.PlannedIndividualContributionConfiguration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssetHolderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("MonthlyContribution")
                        .HasColumnType("float");

                    b.Property<double>("MonthlyIncome")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AssetHolderId")
                        .IsUnique();

                    b.ToTable("PlannedIndividualContributions");
                });

            modelBuilder.Entity("Firestone.Domain.Data.ProjectedAssetsTotal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProjectionType")
                        .HasColumnType("int");

                    b.Property<Guid>("TableEntryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("TableEntryId");

                    b.ToTable("ProjectedAssetsTotals");
                });

            modelBuilder.Entity("Firestone.Domain.Data.RetirementTargetConfiguration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("TargetValue")
                        .HasColumnType("float");

                    b.Property<int>("YearsUntilRetirement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.ToTable("RetirementTargets");
                });

            modelBuilder.Entity("Firestone.Domain.Data.AssetHolder", b =>
                {
                    b.HasOne("Firestone.Domain.Data.FireProgressionTable", "Table")
                        .WithMany("AssetHolders")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");
                });

            modelBuilder.Entity("Firestone.Domain.Data.FireProgressionTableEntry", b =>
                {
                    b.HasOne("Firestone.Domain.Data.FireProgressionTableEntry", "Previous")
                        .WithMany()
                        .HasForeignKey("PreviousTableEntryId");

                    b.HasOne("Firestone.Domain.Data.FireProgressionTable", "FireProgressionTable")
                        .WithMany("FireProgressionTableEntries")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FireProgressionTable");

                    b.Navigation("Previous");
                });

            modelBuilder.Entity("Firestone.Domain.Data.IndividualAssetsTotal", b =>
                {
                    b.HasOne("Firestone.Domain.Data.AssetHolder", "AssetHolder")
                        .WithMany("IndividualAssetValues")
                        .HasForeignKey("AssetHolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Firestone.Domain.Data.FireProgressionTableEntry", "FireProgressionTableEntry")
                        .WithMany("IndividualAssetValues")
                        .HasForeignKey("TableEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssetHolder");

                    b.Navigation("FireProgressionTableEntry");
                });

            modelBuilder.Entity("Firestone.Domain.Data.InflationRateConfiguration", b =>
                {
                    b.HasOne("Firestone.Domain.Data.FireProgressionTable", "FireProgressionTable")
                        .WithMany()
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireProgressionTable");
                });

            modelBuilder.Entity("Firestone.Domain.Data.NominalReturnRateConfiguration", b =>
                {
                    b.HasOne("Firestone.Domain.Data.FireProgressionTable", "FireProgressionTable")
                        .WithMany()
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireProgressionTable");
                });

            modelBuilder.Entity("Firestone.Domain.Data.PlannedIndividualContributionConfiguration", b =>
                {
                    b.HasOne("Firestone.Domain.Data.AssetHolder", "AssetHolder")
                        .WithOne("PlannedIndividualContributionConfiguration")
                        .HasForeignKey("Firestone.Domain.Data.PlannedIndividualContributionConfiguration", "AssetHolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssetHolder");
                });

            modelBuilder.Entity("Firestone.Domain.Data.ProjectedAssetsTotal", b =>
                {
                    b.HasOne("Firestone.Domain.Data.FireProgressionTableEntry", "FireProgressionTableEntry")
                        .WithMany("ProjectedTotalAssetValues")
                        .HasForeignKey("TableEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireProgressionTableEntry");
                });

            modelBuilder.Entity("Firestone.Domain.Data.RetirementTargetConfiguration", b =>
                {
                    b.HasOne("Firestone.Domain.Data.FireProgressionTable", "FireProgressionTable")
                        .WithMany()
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireProgressionTable");
                });

            modelBuilder.Entity("Firestone.Domain.Data.AssetHolder", b =>
                {
                    b.Navigation("IndividualAssetValues");

                    b.Navigation("PlannedIndividualContributionConfiguration")
                        .IsRequired();
                });

            modelBuilder.Entity("Firestone.Domain.Data.FireProgressionTable", b =>
                {
                    b.Navigation("AssetHolders");

                    b.Navigation("FireProgressionTableEntries");
                });

            modelBuilder.Entity("Firestone.Domain.Data.FireProgressionTableEntry", b =>
                {
                    b.Navigation("IndividualAssetValues");

                    b.Navigation("ProjectedTotalAssetValues");
                });
#pragma warning restore 612, 618
        }
    }
}
